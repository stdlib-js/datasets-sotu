{
  "version": 3,
  "sources": ["../lib/validate.js", "../lib/data_dir.js", "../lib/re_filename.js", "../lib/file_list.js", "../lib/index_year.js", "../lib/unsnakecase.js", "../lib/index_name.js", "../lib/party.json", "../lib/index_party.js", "../lib/db.js", "../lib/union.js", "../lib/load_json.js", "../lib/get_file.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isStringArray = require( '@stdlib/assert-is-string-array' ).primitives;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isPositiveIntegerArray = require( '@stdlib/assert-is-positive-integer-array' ).primitives;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {(string|StringArray)} [options.name] - President name(s)\n* @param {(PositiveInteger|PositiveIntegerArray)} [options.year] - year(s)\n* @param {PositiveIntegerArray} [options.range] - year range\n* @param {(string|StringArray)} [options.party] - political party\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'range': [ 1942, 2008 ],\n*     'president': 'Barack Obama'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'name' ) ) {\n\t\topts.name = options.name;\n\t\tif (\n\t\t\t!isString( opts.name ) &&\n\t\t\t!isStringArray( opts.name )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string or an array of strings. Option: `%s`.', 'name', opts.name ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'year' ) ) {\n\t\topts.year = options.year;\n\t\tif (\n\t\t\t!isPositiveInteger( opts.year ) &&\n\t\t\t!isPositiveIntegerArray( opts.year )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer or an array of positive integers. Option: `%s`.', 'year', opts.year ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'range' ) ) {\n\t\topts.range = options.range;\n\t\tif (\n\t\t\t!isPositiveIntegerArray( opts.range ) ||\n\t\t\topts.range.length !== 2\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer array of length two. Option: `%s`.', 'range', opts.range ) );\n\t\t}\n\t\tif ( opts.range[ 0 ] < 1790 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option cannot be less than 1790. Option: `%s`.', 'range[0]', opts.range ) );\n\t\t}\n\t\tif ( opts.range[ 1 ] > 5000 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option cannot be greater than 5000. Option: `%s`.', 'range[1]', opts.range ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'party' ) ) {\n\t\topts.party = options.party;\n\t\tif (\n\t\t\t!isString( opts.party ) &&\n\t\t\t!isStringArray( opts.party )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string or an array of strings. Option: `%s`.', 'party', opts.party ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\n\n\n// MAIN //\n\nvar dir = join( __dirname, '..', 'data' );\n\n\n// EXPORTS //\n\nmodule.exports = dir;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture various parts of a data file filename.\n*\n* Regular expression: `/^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `([0-9]{4})`\n*     -   capture a sequence of four numbers (year)\n*\n* -   `_`\n*     -   a `_` literal\n*\n* -   `([\\S\\s]+)`\n*     -   capture one or more characters (name)\n*\n* -   `_`\n*     -   a `_` literal\n*\n* -   `([a-z]+)`\n*     -   capture one or more alphabetic characters (party)\n*\n* -   `\\..+`\n*     -   a `.` literal followed by one or more characters\n*\n* -   `$`\n*     -   end of string\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/\n*/\nvar RE_FILENAME = /^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/;\n\n\n// EXPORTS //\n\nmodule.exports = RE_FILENAME;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fs = require( 'fs' );\nvar join = require( 'path' ).join;\nvar readDir = require( '@stdlib/fs-read-dir' ).sync;\nvar extname = require( '@stdlib/utils-extname' );\nvar dataDir = require( './data_dir.js' );\nvar RE = require( './re_filename.js' );\n\n\n// VARIABLES //\n\nvar list;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a sorted list of JSON data file filenames by reading the file system.\n*\n* @private\n* @returns {StringArray} filenames\n*/\nfunction read() {\n\tvar fpath;\n\tvar files;\n\tvar stats;\n\tvar out;\n\tvar f;\n\tvar i;\n\n\tfiles = readDir( dataDir );\n\tout = [];\n\tfor ( i = 0; i < files.length; i++ ) {\n\t\tf = files[ i ];\n\t\tif ( extname( f ) === '.json' && RE.test( f ) ) {\n\t\t\tfpath = join( dataDir, f );\n\t\t\tstats = fs.statSync( fpath ); // eslint-disable-line node/no-sync\n\t\t\tif ( stats.isFile() ) {\n\t\t\t\tout.push( f );\n\t\t\t}\n\t\t}\n\t}\n\treturn out.sort();\n}\n\n\n// MAIN //\n\nlist = read();\n\n\n// EXPORTS //\n\nmodule.exports = list;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by year.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar yr;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\tyr = FILES[ i ].match( RE )[ 1 ];\n\t\tif ( hasOwnProp( out, yr ) ) {\n\t\t\tout[ yr ].push( i );\n\t\t} else {\n\t\t\tout[ yr ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar capitalize = require( '@stdlib/string-capitalize' );\n\n\n// MAIN //\n\n/**\n* Converts a snakecase name to a normal name.\n*\n* @private\n* @param {string} str - snakecased name\n* @returns {string} normal name\n*/\nfunction unsnakecase( str ) {\n\tvar parts;\n\tvar i;\n\tparts = str.split( '_' );\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tparts[ i ] = capitalize( parts[ i ] );\n\t}\n\treturn parts.join( ' ' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = unsnakecase;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\nvar unsnakecase = require( './unsnakecase.js' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by President name.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar id;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\t// Extract the President's name from the filename:\n\t\tid = FILES[ i ].match( RE )[ 2 ];\n\n\t\t// Convert the name from snakecase:\n\t\tid = unsnakecase( id );\n\n\t\tif ( hasOwnProp( out, id ) ) {\n\t\t\tout[ id ].push( i );\n\t\t} else {\n\t\t\tout[ id ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n", "{\n  \"d\": \"Democratic\",\n  \"dr\": \"Democratic-Republican\",\n  \"f\": \"Federalist\",\n  \"n\": \"none\",\n  \"nu\": \"National Union\",\n  \"r\": \"Republican\",\n  \"w\": \"Whig\",\n  \"wd\": \"Whig & Democratic\"\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\nvar PARTY = require( './party.json' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by party.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar id;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\t// Extract a party abbreviation from a filename:\n\t\tid = FILES[ i ].match( RE )[ 3 ];\n\n\t\t// Convert the abbreviation to the full party name:\n\t\tid = PARTY[ id ];\n\n\t\tif ( hasOwnProp( out, id ) ) {\n\t\t\tout[ id ].push( i );\n\t\t} else {\n\t\t\tout[ id ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar files = require( './file_list.js' );\n\n\n// MAIN //\n\nvar db = new Array( files.length );\n\n\n// EXPORTS //\n\nmodule.exports = db;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\n\n\n// MAIN //\n\n/**\n* Returns the union.\n*\n* @private\n* @param {...Array} arr - input arrays\n* @returns {Array} union\n*/\nfunction union() {\n\tvar cache;\n\tvar arr;\n\tvar i;\n\tvar j;\n\tcache = {};\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tarr = arguments[ i ];\n\t\tfor ( j = 0; j < arr.length; j++ ) {\n\t\t\tif ( !hasOwnProp( cache, arr[ j ] ) ) {\n\t\t\t\tcache[ arr[ j ] ] = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn objectKeys( cache );\n}\n\n\n// EXPORTS //\n\nmodule.exports = union;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Synchronously loads a JSON file.\n*\n* @private\n* @param {string} fpath - file path\n* @returns {Object} JSON\n*/\nfunction loadJSON( fpath ) {\n\treturn require( fpath ); // eslint-disable-line stdlib/no-dynamic-require\n}\n\n\n// EXPORTS //\n\nmodule.exports = loadJSON;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar copy = require( '@stdlib/utils-copy' );\nvar dataDir = require( './data_dir.js' );\nvar FILES = require( './file_list.js' );\nvar db = require( './db.js' );\nvar loadJSON = require( './load_json.js' );\n\n\n// MAIN //\n\n/**\n* Returns file data.\n*\n* @private\n* @param {NonNegativeInteger} id - file id\n* @returns {Object} file data\n*/\nfunction getFile( id ) {\n\tvar fpath;\n\tvar data;\n\n\t// Check if we can return data from cache...\n\tif ( db[ id ] ) {\n\t\treturn copy( db[ id ] );\n\t}\n\t// Build the data file filename:\n\tfpath = join( dataDir, FILES[ id ] );\n\n\t// Synchronously load the data (prevents release of the zalgo):\n\tdata = loadJSON( fpath );\n\n\t// Save the data to cache:\n\tdb[ id ] = data;\n\n\t// Return a deep copy of the data:\n\treturn copy( data );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getFile;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar removePunctuation = require( '@stdlib/string-remove-punctuation' );\nvar format = require( '@stdlib/string-format' );\nvar validate = require( './validate.js' );\nvar INDEX_YEAR = require( './index_year.js' );\nvar INDEX_NAME = require( './index_name.js' );\nvar INDEX_PARTY = require( './index_party.js' );\nvar db = require( './db.js' );\nvar union = require( './union.js' );\nvar getFile = require( './get_file.js' );\n\n\n// MAIN //\n\n/**\n* Returns State of the Union addresses.\n*\n* @param {Options} [options] - options object\n* @param {(string|StringArray)} [options.name] - name of president(s)\n* @param {(PositiveInteger|PositiveIntegerArray)} [options.year] - year(s)\n* @param {PositiveIntegerArray} [options.range] - year range\n* @param {(string|StringArray)} [options.party] - political party\n* @throws {RangeError} unrecognized property value\n* @returns {ObjectArray} SOTU addresses\n*\n* @example\n* var speeches = sotu();\n* // returns <ObjectArray>\n*\n* @example\n* var speeches = sotu({\n*     'name': [ 'Franklin D Roosevelt', 'William J Clinton' ]\n* });\n* // returns <ObjectArray>\n*/\nfunction sotu( options ) {\n\tvar indices;\n\tvar opts;\n\tvar ids;\n\tvar err;\n\tvar out;\n\tvar i;\n\n\topts = {};\n\tif ( arguments.length > 0 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Normalize options...\n\tif ( isString( opts.name ) ) {\n\t\topts.name = [ opts.name ];\n\t}\n\tif ( opts.name ) {\n\t\tfor ( i = 0; i < opts.name.length; i++ ) {\n\t\t\topts.name[ i ] = removePunctuation( opts.name[ i ] );\n\t\t}\n\t}\n\tif ( isString( opts.party ) ) {\n\t\topts.party = [ opts.party ];\n\t}\n\tif ( isNumber( opts.year ) ) {\n\t\topts.year = [ opts.year ];\n\t}\n\t// Compute indices...\n\tindices = [];\n\tif ( opts.name ) {\n\t\tfor ( i = 0; i < opts.name.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_NAME, opts.name[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'name', opts.name.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_NAME[ opts.name[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.year ) {\n\t\tfor ( i = 0; i < opts.year.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_YEAR, opts.year[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'year', opts.year.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_YEAR[ opts.year[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.party ) {\n\t\tfor ( i = 0; i < opts.party.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_PARTY, opts.party[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'party', opts.party.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_PARTY[ opts.party[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.range ) {\n\t\tfor ( i = opts.range[ 0 ]; i <= opts.range[ 1 ]; i++ ) {\n\t\t\tids = INDEX_YEAR[ i ];\n\t\t\tif ( ids ) {\n\t\t\t\tindices.push( ids );\n\t\t\t}\n\t\t}\n\t}\n\tif ( indices.length ) {\n\t\tindices = union.apply( null, indices );\n\t} else {\n\t\t// If no options have been provided to limit the query range, return the entire dataset...\n\t\tfor ( i = 0; i < db.length; i++ ) {\n\t\t\tindices.push( i );\n\t\t}\n\t}\n\t// Retrieve the data from the database...\n\tout = [];\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tout.push( getFile( indices[i] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sotu;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* State of the Union addresses by U.S. presidents.\n*\n* @module @stdlib/datasets-sotu\n*\n* @example\n* var sotu = require( '@stdlib/datasets-sotu' );\n*\n* var speeches = sotu();\n* // returns <ObjectArray>\n*\n* @example\n* var sotu = require( '@stdlib/datasets-sotu' );\n*\n* var speeches = sotu({\n*     'name': [\n*         'Franklin D Roosevelt',\n*         'William J Clinton'\n*      ]\n* });\n* // returns <ObjectArray>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_validate", "__commonJSMin", "exports", "module", "hasOwnProp", "isObject", "isString", "isStringArray", "isPositiveInteger", "isPositiveIntegerArray", "format", "validate", "opts", "options", "require_data_dir", "__commonJSMin", "exports", "module", "join", "dir", "require_re_filename", "__commonJSMin", "exports", "module", "RE_FILENAME", "require_file_list", "__commonJSMin", "exports", "module", "fs", "join", "readDir", "extname", "dataDir", "RE", "list", "read", "fpath", "files", "stats", "out", "f", "i", "require_index_year", "__commonJSMin", "exports", "module", "hasOwnProp", "FILES", "RE", "idx", "index", "out", "yr", "i", "require_unsnakecase", "__commonJSMin", "exports", "module", "capitalize", "unsnakecase", "str", "parts", "i", "require_index_name", "__commonJSMin", "exports", "module", "hasOwnProp", "FILES", "RE", "unsnakecase", "idx", "index", "out", "id", "i", "require_party", "__commonJSMin", "exports", "module", "require_index_party", "__commonJSMin", "exports", "module", "hasOwnProp", "FILES", "RE", "PARTY", "idx", "index", "out", "id", "i", "require_db", "__commonJSMin", "exports", "module", "files", "db", "require_union", "__commonJSMin", "exports", "module", "objectKeys", "hasOwnProp", "union", "cache", "arr", "i", "j", "require_load_json", "__commonJSMin", "exports", "module", "loadJSON", "fpath", "require_get_file", "__commonJSMin", "exports", "module", "join", "copy", "dataDir", "FILES", "db", "loadJSON", "getFile", "id", "fpath", "data", "require_main", "__commonJSMin", "exports", "module", "isString", "isNumber", "hasOwnProp", "removePunctuation", "format", "validate", "INDEX_YEAR", "INDEX_NAME", "INDEX_PARTY", "db", "union", "getFile", "sotu", "options", "indices", "opts", "ids", "err", "out", "main"]
}
