{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/data_dir.js","../eea145e28010bf528951d65a3a07c5","../lib/file_list.js","../lib/re_filename.js","../lib/index_year.js","../lib/unsnakecase.js","../lib/index_name.js","../lib/index_party.js","../lib/db.js","../lib/union.js","../lib/load_json.js","../lib/get_file.js","../lib/sotu.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isStringArray = require( '@stdlib/assert-is-string-array' ).primitives;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isPositiveIntegerArray = require( '@stdlib/assert-is-positive-integer-array' ).primitives;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {(string|StringArray)} [options.name] - President name(s)\n* @param {(PositiveInteger|PositiveIntegerArray)} [options.year] - year(s)\n* @param {PositiveIntegerArray} [options.range] - year range\n* @param {(string|StringArray)} [options.party] - political party\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'range': [ 1942, 2008 ],\n*     'president': 'Barack Obama'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'name' ) ) {\n\t\topts.name = options.name;\n\t\tif (\n\t\t\t!isString( opts.name ) &&\n\t\t\t!isStringArray( opts.name )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string or an array of strings. Option: `%s`.', 'name', opts.name ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'year' ) ) {\n\t\topts.year = options.year;\n\t\tif (\n\t\t\t!isPositiveInteger( opts.year ) &&\n\t\t\t!isPositiveIntegerArray( opts.year )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer or an array of positive integers. Option: `%s`.', 'year', opts.year ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'range' ) ) {\n\t\topts.range = options.range;\n\t\tif (\n\t\t\t!isPositiveIntegerArray( opts.range ) ||\n\t\t\topts.range.length !== 2\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer array of length two. Option: `%s`.', 'range', opts.range ) );\n\t\t}\n\t\tif ( opts.range[ 0 ] < 1790 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` cannot be less than `1790`. Option: `%s`.', 'range[0]', opts.range ) );\n\t\t}\n\t\tif ( opts.range[ 1 ] > 5000 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` cannot be greater than `5000`. Option: `%s`.', 'range[1]', opts.range ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'party' ) ) {\n\t\topts.party = options.party;\n\t\tif (\n\t\t\t!isString( opts.party ) &&\n\t\t\t!isStringArray( opts.party )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string or an array of strings. Option: `%s`.', 'party', opts.party ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\n\n\n// MAIN //\n\nvar dir = join( __dirname, '..', 'data' );\n\n\n// EXPORTS //\n\nmodule.exports = dir;\n","export default '/home/runner/work/datasets-sotu/datasets-sotu/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fs = require( 'fs' );\nvar join = require( 'path' ).join;\nvar readDir = require( '@stdlib/fs-read-dir' ).sync;\nvar extname = require( '@stdlib/utils-extname' );\nvar dataDir = require( './data_dir.js' );\nvar RE = require( './re_filename.js' );\n\n\n// VARIABLES //\n\nvar list;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a sorted list of JSON data file filenames by reading the file system.\n*\n* @private\n* @returns {StringArray} filenames\n*/\nfunction read() {\n\tvar fpath;\n\tvar files;\n\tvar stats;\n\tvar out;\n\tvar f;\n\tvar i;\n\n\tfiles = readDir( dataDir );\n\tout = [];\n\tfor ( i = 0; i < files.length; i++ ) {\n\t\tf = files[ i ];\n\t\tif ( extname( f ) === '.json' && RE.test( f ) ) {\n\t\t\tfpath = join( dataDir, f );\n\t\t\tstats = fs.statSync( fpath ); // eslint-disable-line node/no-sync\n\t\t\tif ( stats.isFile() ) {\n\t\t\t\tout.push( f );\n\t\t\t}\n\t\t}\n\t}\n\treturn out.sort();\n}\n\n\n// MAIN //\n\nlist = read();\n\n\n// EXPORTS //\n\nmodule.exports = list;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture various parts of a data file filename.\n*\n* Regular expression: `/^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `([0-9]{4})`\n*     -   capture a sequence of four numbers (year)\n*\n* -   `_`\n*     -   a `_` literal\n*\n* -   `([\\S\\s]+)`\n*     -   capture one or more characters (name)\n*\n* -   `_`\n*     -   a `_` literal\n*\n* -   `([a-z]+)`\n*     -   capture one or more alphabetic characters (party)\n*\n* -   `\\..+`\n*     -   a `.` literal followed by one or more characters\n*\n* -   `$`\n*     -   end of string\n*\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/\n*/\nvar RE_FILENAME = /^([0-9]{4})_([\\S\\s]+)_([a-z]+)\\..+$/;\n\n\n// EXPORTS //\n\nmodule.exports = RE_FILENAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by year.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar yr;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\tyr = FILES[ i ].match( RE )[ 1 ];\n\t\tif ( hasOwnProp( out, yr ) ) {\n\t\t\tout[ yr ].push( i );\n\t\t} else {\n\t\t\tout[ yr ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar capitalize = require( '@stdlib/string-capitalize' );\n\n\n// MAIN //\n\n/**\n* Converts a snakecase name to a normal name.\n*\n* @private\n* @param {string} str - snakecased name\n* @returns {string} normal name\n*/\nfunction unsnakecase( str ) {\n\tvar parts;\n\tvar i;\n\tparts = str.split( '_' );\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tparts[ i ] = capitalize( parts[ i ] );\n\t}\n\treturn parts.join( ' ' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = unsnakecase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\nvar unsnakecase = require( './unsnakecase.js' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by President name.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar id;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\t// Extract the President's name from the filename:\n\t\tid = FILES[ i ].match( RE )[ 2 ];\n\n\t\t// Convert the name from snakecase:\n\t\tid = unsnakecase( id );\n\n\t\tif ( hasOwnProp( out, id ) ) {\n\t\t\tout[ id ].push( i );\n\t\t} else {\n\t\t\tout[ id ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar FILES = require( './file_list.js' );\nvar RE = require( './re_filename.js' );\nvar PARTY = require( './party.json' );\n\n\n// VARIABLES //\n\nvar idx;\n\n\n// FUNCTIONS //\n\n/**\n* Generates an index for querying the SOTU database by party.\n*\n* @private\n* @returns {Object} database index\n*/\nfunction index() {\n\tvar out;\n\tvar id;\n\tvar i;\n\tout = {};\n\tfor ( i = 0; i < FILES.length; i++ ) {\n\t\t// Extract a party abbreviation from a filename:\n\t\tid = FILES[ i ].match( RE )[ 3 ];\n\n\t\t// Convert the abbreviation to the full party name:\n\t\tid = PARTY[ id ];\n\n\t\tif ( hasOwnProp( out, id ) ) {\n\t\t\tout[ id ].push( i );\n\t\t} else {\n\t\t\tout[ id ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\nidx = index();\n\n\n// EXPORTS //\n\nmodule.exports = idx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar files = require( './file_list.js' );\n\n\n// MAIN //\n\nvar db = new Array( files.length );\n\n\n// EXPORTS //\n\nmodule.exports = db;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\n\n\n// MAIN //\n\n/**\n* Returns the union.\n*\n* @private\n* @param {...Array} arr - input arrays\n* @returns {Array} union\n*/\nfunction union() {\n\tvar cache;\n\tvar arr;\n\tvar i;\n\tvar j;\n\tcache = {};\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tarr = arguments[ i ];\n\t\tfor ( j = 0; j < arr.length; j++ ) {\n\t\t\tif ( !hasOwnProp( cache, arr[ j ] ) ) {\n\t\t\t\tcache[ arr[ j ] ] = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn objectKeys( cache );\n}\n\n\n// EXPORTS //\n\nmodule.exports = union;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Synchronously loads a JSON file.\n*\n* @private\n* @param {string} fpath - file path\n* @returns {Object} JSON\n*/\nfunction loadJSON( fpath ) {\n\treturn require( fpath ); // eslint-disable-line stdlib/no-dynamic-require\n}\n\n\n// EXPORTS //\n\nmodule.exports = loadJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar copy = require( '@stdlib/utils-copy' );\nvar dataDir = require( './data_dir.js' );\nvar FILES = require( './file_list.js' );\nvar db = require( './db.js' );\nvar loadJSON = require( './load_json.js' );\n\n\n// MAIN //\n\n/**\n* Returns file data.\n*\n* @private\n* @param {NonNegativeInteger} id - file id\n* @returns {Object} file data\n*/\nfunction getFile( id ) {\n\tvar fpath;\n\tvar data;\n\n\t// Check if we can return data from cache...\n\tif ( db[ id ] ) {\n\t\treturn copy( db[ id ] );\n\t}\n\t// Build the data file filename:\n\tfpath = join( dataDir, FILES[ id ] );\n\n\t// Synchronously load the data (prevents release of the zalgo):\n\tdata = loadJSON( fpath );\n\n\t// Save the data to cache:\n\tdb[ id ] = data;\n\n\t// Return a deep copy of the data:\n\treturn copy( data );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getFile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar removePunctuation = require( '@stdlib/string-remove-punctuation' );\nvar format = require( '@stdlib/string-format' );\nvar validate = require( './validate.js' );\nvar INDEX_YEAR = require( './index_year.js' );\nvar INDEX_NAME = require( './index_name.js' );\nvar INDEX_PARTY = require( './index_party.js' );\nvar db = require( './db.js' );\nvar union = require( './union.js' );\nvar getFile = require( './get_file.js' );\n\n\n// MAIN //\n\n/**\n* Returns State of the Union addresses.\n*\n* @param {Options} [options] - options object\n* @param {(string|StringArray)} [options.name] - name of president(s)\n* @param {(PositiveInteger|PositiveIntegerArray)} [options.year] - year(s)\n* @param {PositiveIntegerArray} [options.range] - year range\n* @param {(string|StringArray)} [options.party] - political party\n* @throws {RangeError} unrecognized property value\n* @returns {ObjectArray} SOTU addresses\n*\n* @example\n* var speeches = sotu();\n* // returns <ObjectArray>\n*\n* @example\n* var speeches = sotu({\n*\t'name': [ 'Franklin D Roosevelt', 'William J. Clinton' ]\n* });\n* // returns <ObjectArray>\n*/\nfunction sotu( options ) {\n\tvar indices;\n\tvar opts;\n\tvar ids;\n\tvar err;\n\tvar out;\n\tvar i;\n\n\topts = {};\n\tif ( arguments.length > 0 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Normalize options...\n\tif ( isString( opts.name ) ) {\n\t\topts.name = [ opts.name ];\n\t}\n\tif ( opts.name ) {\n\t\tfor ( i = 0; i < opts.name.length; i++ ) {\n\t\t\topts.name[ i ] = removePunctuation( opts.name[ i ] );\n\t\t}\n\t}\n\tif ( isString( opts.party ) ) {\n\t\topts.party = [ opts.party ];\n\t}\n\tif ( isNumber( opts.year ) ) {\n\t\topts.year = [ opts.year ];\n\t}\n\t// Compute indices...\n\tindices = [];\n\tif ( opts.name ) {\n\t\tfor ( i = 0; i < opts.name.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_NAME, opts.name[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'name', opts.name.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_NAME[ opts.name[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.year ) {\n\t\tfor ( i = 0; i < opts.year.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_YEAR, opts.year[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'year', opts.year.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_YEAR[ opts.year[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.party ) {\n\t\tfor ( i = 0; i < opts.party.length; i++ ) {\n\t\t\tif ( !hasOwnProp( INDEX_PARTY, opts.party[ i ] ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. Unrecognized `%s`. Option: `[%s]`.', 'party', opts.party.join(',') ) );\n\t\t\t}\n\t\t\tids = INDEX_PARTY[ opts.party[ i ] ];\n\t\t\tindices.push( ids );\n\t\t}\n\t}\n\tif ( opts.range ) {\n\t\tfor ( i = opts.range[ 0 ]; i <= opts.range[ 1 ]; i++ ) {\n\t\t\tids = INDEX_YEAR[ i ];\n\t\t\tif ( ids ) {\n\t\t\t\tindices.push( ids );\n\t\t\t}\n\t\t}\n\t}\n\tif ( indices.length ) {\n\t\tindices = union.apply( null, indices );\n\t} else {\n\t\t// If no options have been provided to limit the query range, return the entire dataset...\n\t\tfor ( i = 0; i < db.length; i++ ) {\n\t\t\tindices.push( i );\n\t\t}\n\t}\n\t// Retrieve the data from the database...\n\tout = [];\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tout.push( getFile( indices[i] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sotu;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* State of the Union addresses by U.S. presidents.\n*\n* @module @stdlib/datasets-sotu\n*\n* @example\n* var sotu = require( '@stdlib/datasets-sotu' );\n*\n* var speeches = sotu();\n* // returns <ObjectArray>\n*\n* @example\n* var sotu = require( '@stdlib/datasets-sotu' );\n*\n* var speeches = sotu({\n*     'name': [\n*         'Franklin D Roosevelt',\n*         'William J. Clinton'\n*      ]\n* });\n* // returns <ObjectArray>\n*/\n\n// MODULES //\n\nvar sotu = require( './sotu.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sotu;\n"],"names":["hasOwnProp","require$$0","isObject","require$$1","isString","require$$2","isPrimitive","isStringArray","require$$3","primitives","isPositiveInteger","require$$4","isPositiveIntegerArray","require$$5","format","require$$6","validate_1","opts","options","TypeError","name","year","range","length","RangeError","party","dir","join","require","module","exports","list","re_filename","fs","readDir","sync","extname","dataDir","RE","fpath","files","out","f","i","test","statSync","isFile","push","sort","read","file_list","FILES","index_year","yr","match","index","capitalize","unsnakecase","str","parts","split","index_name","id","PARTY","index_party","db_1","Array","objectKeys","union_1","cache","arr","j","arguments","load_json","copy","db","loadJSON","get_file","data","isNumber","removePunctuation","validate","INDEX_YEAR","INDEX_NAME","require$$7","INDEX_PARTY","require$$8","require$$9","union","require$$10","getFile","require$$11","lib","indices","ids","err","apply"],"mappings":"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"}